    function WIDGET_item_list(options){
        this.$parentList = $("#item_scroll_area");
        this.$lastSelected = null;
        this.$result_wrapper = $("#secondary_result");
        this.item_id = "data_item_id";
        this.item_slug = "data_item_slug";
        this.response_cache = [];
        this.MAX_CACHE = 100;
        this.list_cookies = new WIDGET_item_list_cookies(this);
        this.init_listeners();
    }


    WIDGET_item_list.prototype.init_listeners = function(){
        this.OnClickItemList();
        this.selectFirstElement();
    };

    WIDGET_item_list.prototype.OnClickItemList = function(){
        var self = this;
        $(".item_result_cell").on("click",function(){
            var element = $(this);
            if(!self.isSelected(element)){
                self.selectElement(element);
                self.getResult(element);
            }
        })
    };
    WIDGET_item_list.prototype.selectFirstElement = function(){
        var item_id = this.list_cookies.getItem();
        var $found = null;

        if(item_id){
            $found = this.$parentList.children("div[data_item_id='" +item_id + "'] " );
            if($found.length > 0){
                // http://stackoverflow.com/questions/21179735/scroll-within-div-using-jquery
                this.$parentList.animate({
                    scrollTop: ($found.offset().top - this.$parentList.offset().top)
                },500);
            }else{
                $found = this.$parentList.children().first();
            }
        }
        if(!$found){
            $found = this.$parentList.children().first();
        }
        $found.click();
    };
    WIDGET_item_list.prototype.selectElement = function($element){
        if($element.is(this.$lastSelected)) return;
        if(this.$lastSelected) this.$lastSelected.removeClass("selected");
        $element.addClass("selected");
        this.$lastSelected = $element;
        this.list_cookies.setItem(this.getId($element));
    };
    WIDGET_item_list.prototype.isSelected = function($element){
     return $element.hasClass("selected");
    };
    WIDGET_item_list.prototype.getSlug = function($element){
        return $element.attr(this.item_slug);
    };
    WIDGET_item_list.prototype.getId = function($element){
        return $element.attr(this.item_id);
    };
    WIDGET_item_list.prototype.getResult = function(element){
        var id = this.getId(element);
        var cached = this.getCached(id);
        var self =this;
        if(cached){
            return  this.setItemContent(cached);
        }else{
            this.makeItemRequest(element,function(response, item_data){
                self.OnResponse(response,item_data)
            });
        }
    };

    WIDGET_item_list.prototype.showItemPath = function(id, slug){
      return  Routes.item_show_path({ item_id: id,slug: slug});
    };
    WIDGET_item_list.prototype.makeItemRequest = function(element, response_callback){
        var self = this;
        var item_data = this.buildItemRequest(element);
        $.ajax({
            url:  item_data.show_url,
            method: "GET",
            error: function(jqXHR, textStatus, errorThrown){
                console.log(errorThrown);
            }
        }).done(function(response){
                    return response_callback(response,item_data);
                })
    };

    WIDGET_item_list.prototype.buildItemRequest = function(element){
        var id = this.getId(element);
        var slug = this.getSlug(element);
        return {
            id: id,
            slug: this.getSlug(element),
            show_url: this.showItemPath(id,slug)
        }
    };
    WIDGET_item_list.prototype.getLastId = function(){
        this.getId(this.$lastSelected);
    };
    WIDGET_item_list.prototype.OnResponse = function(response,item_data){
        this.setItemContent(response);
        this.cacheResponse(response,item_data.id);
    };

    WIDGET_item_list.prototype.setItemContent = function(data){
        this.$result_wrapper.html(data);
    };
    WIDGET_item_list.prototype.cacheResponse = function(response,item_id){
            if( this.response_cache > this.MAX_CACHE)this.response_cache.slice(0,this.MAX_CACHE);
            this.response_cache[item_id] = response;
    };
    WIDGET_item_list.prototype.getCached = function(id){
        return this.response_cache[id]
    };



