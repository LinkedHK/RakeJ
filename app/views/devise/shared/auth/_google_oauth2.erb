<script src="https://apis.google.com/js/client:platform.js" async defer></script>

<button class="g-signin"
        data-scope="https://www.googleapis.com/auth/plus.login"
        data-requestvisibleactions="http://schemas.google.com/AddActivity"
        data-clientId="<%= omni_client(:google_oauth2)%>"
        data-callback="onSignInCallback"
        data-theme="dark"
        id="google_butt"
        data-cookiepolicy="single_host_origin">
</button>
<script>
    var helper = (function() {
        var BASE_API_PATH = 'plus/v1/';

        return {
            /**
             * Hides the sign in button and starts the post-authorization operations.
             *
             * @param {Object} authResult An Object which contains the access token and
             *   other authentication information.
             */
            onSignInCallback: function(authResult) {
                gapi.client.load('plus','v1').then(function() {
                    if (authResult['access_token']) {

                      //  helper.profile();
                        //helper.people();
                        helper.send_callback(authResult);
                    } else if (authResult['error']) {
                        // There was an error, which means the user is not signed in.
                        // As an example, you can handle by writing to the console:
                        console.log('There was an error: ' + authResult['error']);
                    }
                    console.log('authResult', authResult);
                });
            },

            /**
             * Calls the OAuth2 endpoint to disconnect the app for the user.
             */
            disconnect: function() {
                // Revoke the access token.
                $.ajax({
                    type: 'GET',
                    url: 'https://accounts.google.com/o/oauth2/revoke?token=' +
                            gapi.auth.getToken().access_token,
                    async: false,
                    contentType: 'application/json',
                    dataType: 'jsonp',
                    success: function(result) {
                        console.log('revoke response: ' + result);
                    },
                    error: function(e) {
                        console.log(e);
                    }
                });
            },

            send_callback: function(response){

                jQuery.ajax({type: 'GET', url: "<%= omni_redirect(:google_oauth2)%>", dataType: 'json', data: response,
                    success: function(json) {
                        console.log(json);
                        // response from server
                    }
                });
            },

            /**
             * Gets and renders the list of people visible to this app.
             */

            people: function() {
                gapi.client.plus.people.list({
                    'userId': 'me',
                    'collection': 'visible'
                }).then(function(res) {
                    var people = res.result;
                    $('#visiblePeople').empty();
                    $('#visiblePeople').append('Number of people visible to this app: ' +
                            people.totalItems + '<br/>');
                    for (var personIndex in people.items) {
                        person = people.items[personIndex];
                        $('#visiblePeople').append('<img src="' + person.image.url + '">');
                    }
                });
            },

            /**
             * Gets and renders the currently signed in user's profile data.
             */
            profile: function(){
                gapi.client.plus.people.get({
                    'userId': 'me'
                }).then(function(res) {
                    var profile = res.result;
                    $('#profile').empty();
                    $('#profile').append(
                            $('<p><img src=\"' + profile.image.url + '\"></p>'));
                    $('#profile').append(
                            $('<p>Hello ' + profile.displayName + '!<br />Tagline: ' +
                                    profile.tagline + '<br />About: ' + profile.aboutMe + '</p>'));
                    if (profile.cover && profile.coverPhoto) {
                        $('#profile').append(
                                $('<p><img src=\"' + profile.cover.coverPhoto.url + '\"></p>'));
                    }
                }, function(err) {
                    var error = err.result;
                    $('#profile').empty();
                    $('#profile').append(error.message);
                });
            }
        };
    })();

    /**
     * jQuery initialization
     */
    $(document).ready(function() {
        $('#disconnect').click(helper.disconnect);
        if ($('[data-clientid="YOUR_CLIENT_ID"]').length > 0) {

        }
    });

    /**
     * Calls the helper method that handles the authentication flow.
     *
     * @param {Object} authResult An Object which contains the access token and
     *   other authentication information.
     */
    function onSignInCallback(authResult) {
        helper.onSignInCallback(authResult);
    }
</script>
